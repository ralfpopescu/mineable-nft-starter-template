/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "DummyMineablePunks",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyMineablePunks__factory>;
    getContractFactory(
      name: "DummyMineableWords",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DummyMineableWords__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "IMGear",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMGear__factory>;
    getContractFactory(
      name: "IMineablePunks",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMineablePunks__factory>;
    getContractFactory(
      name: "IMineableWords",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMineableWords__factory>;
    getContractFactory(
      name: "IRenderer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenderer__factory>;
    getContractFactory(
      name: "IStats",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStats__factory>;
    getContractFactory(
      name: "MGear",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MGear__factory>;
    getContractFactory(
      name: "OldMGear",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OldMGear__factory>;
    getContractFactory(
      name: "OldMGear",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OldMGear__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "Renderer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Renderer__factory>;
    getContractFactory(
      name: "Stats",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Stats__factory>;

    getContractAt(
      name: "DummyMineablePunks",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyMineablePunks>;
    getContractAt(
      name: "DummyMineableWords",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DummyMineableWords>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "IMGear",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMGear>;
    getContractAt(
      name: "IMineablePunks",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMineablePunks>;
    getContractAt(
      name: "IMineableWords",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMineableWords>;
    getContractAt(
      name: "IRenderer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenderer>;
    getContractAt(
      name: "IStats",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStats>;
    getContractAt(
      name: "MGear",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MGear>;
    getContractAt(
      name: "OldMGear",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OldMGear>;
    getContractAt(
      name: "OldMGear",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OldMGear>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "Renderer",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Renderer>;
    getContractAt(
      name: "Stats",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Stats>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
